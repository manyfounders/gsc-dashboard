rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Правила для коллекции комментариев сайтов
    match /site_comments/{commentId} {
      // Чтение: пользователи могут читать все комментарии
      allow read: if request.auth != null;
      
      // Создание: авторизованные пользователи могут создавать комментарии
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.userEmail == request.auth.token.email
        && request.resource.data.content is string
        && request.resource.data.content.size() > 0
        && request.resource.data.content.size() <= 2000
        && request.resource.data.siteUrl is string
        && request.resource.data.siteUrl.size() > 0
        && request.resource.data.siteName is string
        && request.resource.data.siteName.size() > 0
        && request.resource.data.createdAt == request.time;
      
      // Обновление: только автор комментария или админ может редактировать
      allow update: if request.auth != null 
        && (resource.data.userId == request.auth.uid 
            || request.auth.token.email == 'admin@example.com')
        && request.resource.data.content is string
        && request.resource.data.content.size() > 0
        && request.resource.data.content.size() <= 2000
        && request.resource.data.updatedAt == request.time
        && request.resource.data.isEdited == true;
      
      // Удаление: только автор комментария или админ может удалять
      allow delete: if request.auth != null 
        && (resource.data.userId == request.auth.uid 
            || request.auth.token.email == 'admin@example.com');
    }

    // Разрешить пользователю читать и записывать только свой документ в telegram_settings
    match /telegram_settings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Разрешить пользователю читать и записывать только свой документ в tg_notifications_settings,
    // а Cloud Function (без авторизации) может читать все документы этой коллекции
    match /tg_notifications_settings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth == null; // для Cloud Function
    }

    // Разрешить пользователю читать и записывать только свой документ в users
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Разрешить Cloud Function записывать метрики, а пользователям читать
    match /website_metrics/{siteUrl} {
      allow read: if request.auth != null;
      allow write: if request.auth == null; // для Cloud Function
    }

    // Разрешить пользователю читать и записывать только свои запросы на индексацию
    match /indexing_requests/{requestId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Разрешить пользователю читать и записывать только свои проверки индексации
    match /indexing_checks/{checkId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Правила для других коллекций (если понадобятся в будущем)
    match /{document=**} {
      // По умолчанию запрещаем доступ к неопределенным коллекциям
      allow read, write: if false;
    }
  }
} 